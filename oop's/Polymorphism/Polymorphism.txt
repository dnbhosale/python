Polymorphism in Python
======================================
What is Polymorphism: 
The word polymorphism means having many forms. In programming, polymorphism means the same function name (but different signatures)
 being used for different types. The key difference is the data types and number of arguments used in function.

Example
-------------------------
# Python program to demonstrate in-built poly-
# morphic functions

# len() being used for a string
print(len("geeks"))

# len() being used for a list
print(len([10, 20, 30]))
----------------------------------
# A simple Python function to demonstrate
# Polymorphism

def add(x, y, z = 0):
	return x + y+z

# Driver code
print(add(2, 3))
print(add(2, 3, 4))
---------------------------------------
Polymorphism with Inheritance: 
Method Overriding.
-------------------------
In Python, Polymorphism lets us define methods in the child class that have the same name as the methods in the parent class.
 In inheritance, the child class inherits the methods from the parent class. 
However, it is possible to modify a method in a child class that it has inherited from the parent class. 
This is particularly useful in cases where the method inherited from the parent class doesnâ€™t quite fit the child class. 
In such cases, we re-implement the method in the child class. 
This process of re-implementing a method in the child class is known as Method Overriding.
---------------------------------
Method Overloading:

Two or more methods have the same name but different numbers of parameters or different types of parameters, or both. 
These methods are called overloaded methods and this is called method overloading. 

Like other languages (for example, method overloading in C++) do, python does not support method overloading by default. 
But there are different ways to achieve method overloading in Python. 

The problem with method overloading in Python is that we may overload the methods but can only use the latest defined method. 
-------------------------------------------------------------

